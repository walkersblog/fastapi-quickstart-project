apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: pytest
  namespace: ocp-fastapi-quickstart-project
spec:
  description: This task will run pytest on the provided input.
  params:
    - default: latest
      description: 'The used Python version, more precisely the tag for the Python image'
      name: PYTHON
      type: string
    - default: ''
      description: The additional arguments to be used with pytest
      name: ARGS
      type: string
    - default: .
      description: The path to the source code
      name: SOURCE_PATH
      type: string
    - default: requirements.txt
      description: >-
        The name of the requirements file inside the source location, with
        fallback to the requirements file in the root location
      name: REQUIREMENTS_FILE
      type: string
  steps:
    - image: 'docker.io/python:$(inputs.params.PYTHON)'
      name: unit-test
      resources: {}
      script: >
        export PATH=$PATH:$HOME/.local/bin

        if [ -e
        "$(inputs.params.SOURCE_PATH)"/"$(inputs.params.REQUIREMENTS_FILE)" ];

        then
          pip install -r "$(inputs.params.SOURCE_PATH)"/"$(inputs.params.REQUIREMENTS_FILE)"
          pip show pytest || {
            printf "###\nWarning: Pytest is missing in your test requirements file\n###";
            pip install pytest
          }
        else
          if [ -e "$(inputs.params.REQUIREMENTS_FILE)" ];
          then
            pip install -r "$(inputs.params.REQUIREMENTS_FILE)"
          fi
          pip install pytest
        fi

        if [ -z "$(inputs.params.ARGS)" ]; then
          pytest "$(inputs.params.SOURCE_PATH)"
        else
          pytest "$(inputs.params.ARGS)" "$(inputs.params.SOURCE_PATH)"
        fi
      workingDir: $(workspaces.source.path)
  workspaces:
    - name: source
