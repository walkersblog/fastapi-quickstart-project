apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: s2i-build-and-deploy
spec:
  params:
    - default: fastapi-quickstart-app
      name: IMAGE_NAME
      type: string
    - default: '1.2'
      name: IMAGE_TAG
      type: string
    - default: 'https://github.com/walkersblog/fastapi-quickstart-project'
      name: GIT_REPO
      type: string
    - default: main
      name: GIT_REVISION
      type: string
    - default: Hello from Pipeline
      name: MESSAGE
      type: string
  workspaces:
    - name: workspace
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: workspace
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
        - name: subdirectory
          value: ""
        - name: deleteExisting
          value: "true"
    - name: pytest
      params:
        - name: PYTHON
          value: latest
        - name: SOURCE_PATH
          value: .
        - name: REQUIREMENTS_FILE
          value: requirements.txt
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: pytest
      workspaces:
        - name: source
          workspace: workspace
    - name: build
      taskRef:
        name: s2i-fastapi
        kind: Task
      runAfter:
        - pytest
      workspaces:
        - name: source
          workspace: workspace
      params:
        - name: IMAGE
          value: image-registry.openshift-image-registry.svc:5000/ocp-fastapi-quickstart-project/$(params.IMAGE_NAME):$(params.IMAGE_TAG)
        - name: TLSVERIFY
          value: "false"
    - name: deploy
      taskRef:
        name: openshift-client
        kind: ClusterTask
      runAfter:
        - build
      params:
      - name: SCRIPT
        value: |
          oc new-app --docker-image image-registry.openshift-image-registry.svc:5000/ocp-fastapi-quickstart-project/$(params.IMAGE_NAME):$(params.IMAGE_TAG) -e ENV_STRING="$(params.MESSAGE)"
    - name: patch
      params:
        - name: SCRIPT
          value: >
            oc patch svc $(params.IMAGE_NAME) --type merge --patch
            '{"spec":{"ports":[{"port": 8000, "targetPort": 8000 }]}}'
      runAfter:
        - deploy
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: expose
      params:
        - name: SCRIPT
          value: |
            oc expose service/$(params.IMAGE_NAME)
      runAfter:
        - patch
      taskRef:
        kind: ClusterTask
        name: openshift-client
