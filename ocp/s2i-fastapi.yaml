apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/displayName: s2i fastapi
    tekton.dev/pipelines.minVersion: "0.19"
    tekton.dev/tags: s2i, python, workspace
  labels:
    app.kubernetes.io/version: "0.1"
    operator.tekton.dev/provider-type: redhat
  name: s2i-fastapi
spec:
  description: s2i-fastapi task clones a Git repository and builds and pushes a container
    image using S2I and a Python builder image.
  params:
  - default: '1.1'
    description: The tag of python imagestream for python version
    name: VERSION
    type: string
  - default: .
    description: The location of the path to run s2i from.
    name: PATH_CONTEXT
    type: string
  - default: "true"
    description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS
      registry)
    name: TLSVERIFY
    type: string
  - description: Location of the repo where image has to be pushed
    name: IMAGE
    type: string
  - default: registry.redhat.io/rhel8/buildah@sha256:e19cf23d5f1e0608f5a897f0a50448beb9f8387031cca49c7487ec71bd91c4d3
    description: The location of the buildah builder image.
    name: BUILDER_IMAGE
    type: string
  results:
  - description: Digest of the image just built.
    name: IMAGE_DIGEST
  steps:
  - command:
    - s2i
    - build
    - $(params.PATH_CONTEXT)
    - image-registry.openshift-image-registry.svc:5000/ocp-fastapi-quickstart-project/fastapi-s2i-img:$(params.VERSION)
    - --as-dockerfile
    - /gen-source/Dockerfile.gen
    env:
    - name: HOME
      value: /tekton/home
    image: registry.redhat.io/ocp-tools-4-tech-preview/source-to-image-rhel8@sha256:e518e05a730ae066e371a4bd36a5af9cedc8686fd04bd59648d20ea0a486d7e5
    name: generate
    resources: {}
    volumeMounts:
    - mountPath: /gen-source
      name: gen-source
    workingDir: $(workspaces.source.path)
  - command:
    - buildah
    - bud
    - --storage-driver=vfs
    - --tls-verify=$(params.TLSVERIFY)
    - --layers
    - -f
    - /gen-source/Dockerfile.gen
    - -t
    - $(params.IMAGE)
    - .
    image: $(params.BUILDER_IMAGE)
    name: build
    resources: {}
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
    - mountPath: /gen-source
      name: gen-source
    workingDir: /gen-source
  - command:
    - buildah
    - push
    - --storage-driver=vfs
    - --tls-verify=$(params.TLSVERIFY)
    - --digestfile=$(workspaces.source.path)/image-digest
    - $(params.IMAGE)
    - docker://$(params.IMAGE)
    image: $(params.BUILDER_IMAGE)
    name: push
    resources: {}
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
    workingDir: $(workspaces.source.path)
  - image: $(params.BUILDER_IMAGE)
    name: digest-to-results
    resources: {}
    script: cat $(workspaces.source.path)/image-digest | tee /tekton/results/IMAGE_DIGEST
  volumes:
  - emptyDir: {}
    name: varlibcontainers
  - emptyDir: {}
    name: gen-source
  workspaces:
  - mountPath: /workspace/source
    name: source
